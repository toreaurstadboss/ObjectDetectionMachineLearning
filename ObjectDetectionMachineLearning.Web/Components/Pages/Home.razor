@page "/"
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Home</PageTitle>

<h1>Object detection using Machine learning</h1>

<script src="js/home.js" type="text/javascript"></script>

<p>
    Upload an image to use the Object detection demo. The machine-learned ML.Net model will detect <em>Stop signs</em> and
    display bounding boxes around each stop sign in the image. The stop sign is trained to use those used as traffic signs in United States
    along streets and roads.
</p>

<div class="container">

    <div class="row align-items-start">
        <div class="col">
            <label><b>Select a picture to run stop sign object detection</b></label><br />
            <InputFile OnChange="@OnInputFile" accept=".jpeg,.jpg,.png" />
            <br />
            <code class="alert-secondary">Supported file formats: .jpeg, .jpg and .png. Max image file upload size : 10 MB</code>
            <br />
        </div>
    </div>

    <div class="row align-items-start">
        <div class="col">
            <label><b>Detected objects (stop-signs) in the loaded image:</b></label><br />

            @if (LatestPrediction?.predictedLabel?.Count > 0)
            {
                <table class="table table-bordered table-striped table-hover mt-3">
                    <thead class="table-dark">
                        <tr>
                            <th>#</th>
                            <th>Label</th>
                            <th>X1</th>
                            <th>Y1</th>
                            <th>X2</th>
                            <th>Y2</th>
                            <th>Confidence</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < LatestPrediction.predictedLabel.Count; i++)
                        {
                            var label = LatestPrediction.predictedLabel.ElementAt(i);
                            var bbox = LatestPrediction.predictedBoundingBoxes.Skip(i * 4).Take(4).ToArray();
                            var score = LatestPrediction.score.ElementAt(i);

                            <tr>
                                <td>@(i + 1)</td>
                                <td>@label</td>
                                <td>@bbox[0].ToString("0.00")</td>
                                <td>@bbox[1].ToString("0.00")</td>
                                <td>@bbox[2].ToString("0.00")</td>
                                <td>@bbox[3].ToString("0.00")</td>
                                <td>@score.ToString("0.0000")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="text-muted">No predictions available.</p>
            }
        </div>
    </div>

    <div class="row align-items-start">
        <div class="col overflow-scroll">
            <label class="alert-info">Preview of the selected image</label>
            <div>
                <img id="PreviewImage" style="border:1px solid black;" src="@UploadedImagePreview" /><br />
            </div>
        </div>
        <div class="col overflow-scroll">
            <label class="alert-info">Image with bounding boxes</label>
            <canvas height="400" id="PreviewImageBbox" style="border:solid 1px black">
            </canvas>
            <br />
        </div>
    </div>

</div>


